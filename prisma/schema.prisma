// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OP {
  create
  addwl
  mint
  approve
  send
  burn
}

enum MintMode {
  public
  whitelist
  creator
}

enum TokenStatus {
  normal
  burned
}

enum TransactionStatus {
  success
  fail
}

model Collection {
  id            BigInt    @id @default(autoincrement())
  tx_id         BigInt
  collection_id String
  name          String
  description   String?
  image         String
  issuer        String
  base_uri      String
  supply        BigInt?
  ms_mode       MintMode?
  ms_start      Int?
  ms_end        Int?
  ms_price      BigInt?
  ms_limit      Int?
  create_time   DateTime
  update_time   DateTime

  @@unique([collection_id])
  @@map("collection")
}

model Whitelist {
  id            BigInt   @id @default(autoincrement())
  tx_id         BigInt
  collection_id String
  address       String
  create_time   DateTime

  @@index([collection_id, address])
  @@map("whitelist")
}

model Token {
  id            BigInt      @id @default(autoincrement())
  tx_id         BigInt
  collection_id String
  token_id      Int
  name          String
  description   String?
  image         String
  owner         String
  status        TokenStatus @default(normal)
  create_time   DateTime
  update_time   DateTime

  @@unique([collection_id, token_id])
  @@map("token")
}

model Approval {
  id            BigInt   @id @default(autoincrement())
  tx_id         BigInt
  collection_id String
  token_id      Int
  approved      String?
  create_time   DateTime

  @@index([collection_id, token_id])
  @@map("approval")
}

model Transaction {
  id              BigInt            @id @default(autoincrement())
  op              OP
  content         String
  collection_id   String
  token_id        Int?
  block_number    Int
  extrinsic_hash  String
  extrinsic_index Int
  sender          String
  status          TransactionStatus
  fail_reason     String?
  create_time     DateTime

  @@index([collection_id, token_id])
  @@map("transaction")
}
